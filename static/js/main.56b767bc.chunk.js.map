{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Layout/Layout.css","components/Burger/Burger.css","components/Burger/BuildControls/BuildControls.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","Content","Burger","BuildControls","layout","props","react_default","a","createElement","Fragment","className","classes","children","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buidControl","label","onClick","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","_this","updatedIngredients","objectSpread","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","priceDeduction","disabledInfo","Burger_Burger","BuildControls_BuildControls","App","Layout_Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56b767bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__2z9NQ\",\"BreadTop\":\"BurgerIngredient__BreadTop__2Pkwe\",\"Seeds1\":\"BurgerIngredient__Seeds1__2k2x7\",\"Seeds2\":\"BurgerIngredient__Seeds2__9Mret\",\"Meat\":\"BurgerIngredient__Meat__1LdrR\",\"Cheese\":\"BurgerIngredient__Cheese__1eqwP\",\"Salad\":\"BurgerIngredient__Salad__2WBlr\",\"Bacon\":\"BurgerIngredient__Bacon__2RZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__ibcUQ\",\"Label\":\"BuildControl__Label__2VLnR\",\"Less\":\"BuildControl__Less__3X6hg\",\"More\":\"BuildControl__More__2eQpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__2UQcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\"};","import React from 'react';\r\nimport classes from './Layout.css';\r\n\r\nconst layout = (props) => (\r\n  <>\r\n    <div>\r\n      Toolbar, SideDrawer, Backdrop\r\n  </div>\r\n    <main className={classes.Content}>\r\n      {props.children}\r\n    </main>\r\n  </>\r\n);\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.css';\r\n\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case ('bread-bottom'):\r\n        ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n      case ('bread-top'):\r\n        ingredient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case ('meat'):\r\n        ingredient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case ('cheese'):\r\n        ingredient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case ('bacon'):\r\n        ingredient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      case ('salad'):\r\n        ingredient = <div className={classes.Salad}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />\r\n      }); // [ , ]\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []); //reduce is transforming an array\r\n\r\n  if (transformedIngredients.length === 0)\r\n    transformedIngredients = <p>Please start adding ingredients...</p>\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.css';\r\n\r\nconst buidControl = (props) => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button\r\n      className={classes.Less}\r\n      onClick={props.removed}\r\n      disabled={props.disabled}>Less</button>\r\n    <button\r\n      className={classes.More}\r\n      onClick={props.added}>More</button>\r\n  </div>\r\n);\r\n\r\nexport default buidControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Meat', type: 'meat' }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n    {controls.map(ctrl => {\r\n      return <BuildControl\r\n        key={ctrl.label}\r\n        label={ctrl.label}\r\n        added={() => props.ingredientAdded(ctrl.type)}\r\n        removed={() => props.ingredientRemoved(ctrl.type)}\r\n        disabled={props.disabled[ctrl.type]} />\r\n    })}\r\n  </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 0.3,\r\n  bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4\r\n  }\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n\r\n    this.setState({\r\n      totalPrice: newPrice,\r\n      ingredients: updatedIngredients\r\n    })\r\n  }\r\n\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) { return; }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n\r\n    this.setState({\r\n      totalPrice: newPrice,\r\n      ingredients: updatedIngredients\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    return (\r\n      <>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          price={this.state.totalPrice}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}